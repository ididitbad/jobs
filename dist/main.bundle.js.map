{"version":3,"sources":["C:/Users/KirK/IdeaProjects/ngx/src async","C:/Users/KirK/IdeaProjects/ngx/src/app/app-routing.module.ts","C:/Users/KirK/IdeaProjects/ngx/src/app/app.component.css","C:/Users/KirK/IdeaProjects/ngx/src/app/app.component.html","C:/Users/KirK/IdeaProjects/ngx/src/app/app.component.ts","C:/Users/KirK/IdeaProjects/ngx/src/app/app.module.ts","C:/Users/KirK/IdeaProjects/ngx/src/app/contract.component.html","C:/Users/KirK/IdeaProjects/ngx/src/app/contract.component.ts","C:/Users/KirK/IdeaProjects/ngx/src/app/employee.component.html","C:/Users/KirK/IdeaProjects/ngx/src/app/employee.component.ts","C:/Users/KirK/IdeaProjects/ngx/src/app/location.component.html","C:/Users/KirK/IdeaProjects/ngx/src/app/location.component.ts","C:/Users/KirK/IdeaProjects/ngx/src/environments/environment.ts","C:/Users/KirK/IdeaProjects/ngx/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/KirK/IdeaProjects/ngx/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","/**\r\n * Created by KirK on 09.07.2017.\r\n */\r\n\r\nimport { NgModule }             from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { EmployeeComponent } from './employee.component';\r\nimport { ContractComponent } from \"./contract.component\";\r\nimport { LocationComponent } from \"./location.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/employee', pathMatch: 'full' },\r\n  { path: 'employee',  component: EmployeeComponent },\r\n  { path: 'contract',  component: ContractComponent },\r\n  { path: 'location',  component: LocationComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/KirK/IdeaProjects/ngx/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"nav a {\\r\\n  padding: 5px 10px;\\r\\n  text-decoration: none;\\r\\n  margin-top: 10px;\\r\\n  display: inline-block;\\r\\n  background-color: #eee;\\r\\n  border-radius: 4px;\\r\\n}\\r\\nnav a:visited, a:link {\\r\\n  color: #607D8B;\\r\\n}\\r\\nnav a:hover {\\r\\n  color: #039be5;\\r\\n  background-color: #CFD8DC;\\r\\n}\\r\\nnav a.active {\\r\\n  color: #039be5;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/KirK/IdeaProjects/ngx/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<md-toolbar color=\\\"primary\\\">\\n  <span>Header</span>\\n  <md-toolbar-row>\\n    <span>\\n      <button md-button (click)=\\\"sidenav.open()\\\">\\n        Tables\\n      </button>\\n    </span>\\n  </md-toolbar-row>\\n</md-toolbar>\\n\\n<md-sidenav-container>\\n  <md-sidenav #sidenav style=\\\"padding: 20px\\\">\\n    <nav>\\n      <p><a routerLink=\\\"/employee\\\" routerLinkActive=\\\"active\\\">Employees</a></p>\\n      <p><a routerLink=\\\"/contract\\\" routerLinkActive=\\\"active\\\">Contracts</a></p>\\n      <p><a routerLink=\\\"/location\\\" routerLinkActive=\\\"active\\\">Locations</a></p>\\n    </nav>\\n  </md-sidenav>\\n  <router-outlet></router-outlet>\\n</md-sidenav-container>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/KirK/IdeaProjects/ngx/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/KirK/IdeaProjects/ngx/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule }     from './app-routing.module';\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { MdButtonModule, MdToolbarModule, MdSidenavModule, MdTableModule, MdPaginatorModule, MdInputModule, MdDialogModule } from '@angular/material';\nimport { CdkTableModule } from '@angular/cdk';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { EmployeeComponent } from \"./employee.component\";\nimport { ContractComponent } from \"./contract.component\";\nimport {LocationComponent} from \"./location.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeComponent,\n    ContractComponent,\n    LocationComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    NgxDatatableModule,\n    MdSidenavModule, MdButtonModule, MdToolbarModule, MdTableModule, MdPaginatorModule, MdInputModule, MdDialogModule,\n    CdkTableModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/KirK/IdeaProjects/ngx/src/app/app.module.ts","module.exports = \"\\r\\n<div>\\r\\n  <!--<h3>\\r\\n   {{updated}}\\r\\n </h3>-->\\r\\n  <ngx-datatable\\r\\n    #mydatatable\\r\\n    class=\\\"material\\\"\\r\\n    [headerHeight]=\\\"50\\\"\\r\\n    [limit]=\\\"10\\\"\\r\\n    [columnMode]=\\\"'force'\\\"\\r\\n    [footerHeight]=\\\"50\\\"\\r\\n    [rowHeight]=\\\"'auto'\\\"\\r\\n    [rows]=\\\"rows\\\">\\r\\n    <ngx-datatable-column name=\\\"Id\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n        {{value}}\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"Name\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n            <span\\r\\n              title=\\\"Double click to edit\\\"\\r\\n              (click)=\\\"editing[row.$$index + '-name'] = true\\\"\\r\\n              *ngIf=\\\"!editing[row.$$index + '-name']\\\">\\r\\n              {{value}}\\r\\n            </span>\\r\\n        <input\\r\\n          autofocus\\r\\n          (blur)=\\\"updateValue($event, 'name', value, row)\\\"\\r\\n          *ngIf=\\\"editing[row.$$index + '-name']\\\"\\r\\n          type=\\\"text\\\"\\r\\n          [value]=\\\"value\\\"\\r\\n        />\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"Price\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n            <span\\r\\n              title=\\\"Double click to edit\\\"\\r\\n              (click)=\\\"editing[row.$$index + '-price'] = true\\\"\\r\\n              *ngIf=\\\"!editing[row.$$index + '-price']\\\">\\r\\n              {{value}}\\r\\n            </span>\\r\\n        <input\\r\\n          autofocus\\r\\n          (blur)=\\\"updateValue($event, 'price', value, row)\\\"\\r\\n          *ngIf=\\\"editing[row.$$index + '-price']\\\"\\r\\n          type=\\\"text\\\"\\r\\n          [value]=\\\"value\\\"\\r\\n        />\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n        <button md-raised-button (click)=\\\"deleteRow($event, row)\\\">Delete</button>\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n  </ngx-datatable>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/KirK/IdeaProjects/ngx/src/app/contract.component.html\n// module id = ../../../../../src/app/contract.component.html\n// module chunks = 1","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'contract',\r\n  templateUrl: './contract.component.html'\r\n})\r\nexport class ContractComponent {\r\n  updated = \"\";\r\n  editing = {};\r\n  rows = [];\r\n\r\n  constructor() {\r\n    this.fetch((data) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `http://localhost:8080/contract`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  updateValue(event, cell, cellValue, row) {\r\n    this.editing[row.$$index + '-' + cell] = false;\r\n    this.rows[row.$$index][cell] = event.target.value;\r\n    this.updated = JSON.stringify(row);\r\n    const rep = new XMLHttpRequest();\r\n    rep.open('POST', `http://localhost:8080/contract/update`);\r\n    rep.send(JSON.stringify(row));\r\n  }\r\n  deleteRow(event, row){\r\n    var id = row.id;\r\n    this.rows.splice(row.$$index, 1);\r\n    this.updated = id;\r\n    const red = new XMLHttpRequest();\r\n    red.open('POST', `http://localhost:8080/contract/delete`);\r\n    red.send(id);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/KirK/IdeaProjects/ngx/src/app/contract.component.ts","module.exports = \"\\r\\n<div>\\r\\n  <!--<h3>\\r\\n   {{updated}}\\r\\n </h3>-->\\r\\n  <ngx-datatable\\r\\n    #mydatatable\\r\\n    class=\\\"material\\\"\\r\\n    [headerHeight]=\\\"50\\\"\\r\\n    [limit]=\\\"10\\\"\\r\\n    [columnMode]=\\\"'force'\\\"\\r\\n    [footerHeight]=\\\"50\\\"\\r\\n    [rowHeight]=\\\"'auto'\\\"\\r\\n    [rows]=\\\"rows\\\">\\r\\n    <ngx-datatable-column name=\\\"Id\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n        {{value}}\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"Name\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n            <span\\r\\n              title=\\\"Double click to edit\\\"\\r\\n              (click)=\\\"editing[row.$$index + '-name'] = true\\\"\\r\\n              *ngIf=\\\"!editing[row.$$index + '-name']\\\">\\r\\n              {{value}}\\r\\n            </span>\\r\\n        <input\\r\\n          autofocus\\r\\n          (blur)=\\\"updateValue($event, 'name', value, row)\\\"\\r\\n          *ngIf=\\\"editing[row.$$index + '-name']\\\"\\r\\n          type=\\\"text\\\"\\r\\n          [value]=\\\"value\\\"\\r\\n        />\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"Surname\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n            <span\\r\\n              title=\\\"Double click to edit\\\"\\r\\n              (click)=\\\"editing[row.$$index + '-surname'] = true\\\"\\r\\n              *ngIf=\\\"!editing[row.$$index + '-surname']\\\">\\r\\n              {{value}}\\r\\n            </span>\\r\\n        <input\\r\\n          autofocus\\r\\n          (blur)=\\\"updateValue($event, 'surname', value, row)\\\"\\r\\n          *ngIf=\\\"editing[row.$$index + '-surname']\\\"\\r\\n          type=\\\"text\\\"\\r\\n          [value]=\\\"value\\\"\\r\\n        />\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"Birth\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n            <span\\r\\n              title=\\\"Double click to edit\\\"\\r\\n              (click)=\\\"editing[row.$$index + '-birth'] = true\\\"\\r\\n              *ngIf=\\\"!editing[row.$$index + '-birth']\\\">\\r\\n              {{value}}\\r\\n            </span>\\r\\n        <input\\r\\n          autofocus\\r\\n          (blur)=\\\"updateValue($event, 'birth', value, row)\\\"\\r\\n          *ngIf=\\\"editing[row.$$index + '-birth']\\\"\\r\\n          type=\\\"text\\\"\\r\\n          [value]=\\\"value\\\"\\r\\n        />\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"City\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n             <span\\r\\n               title=\\\"Double click to edit\\\"\\r\\n               (click)=\\\"editing[row.$$index + '-city'] = true\\\"\\r\\n               *ngIf=\\\"!editing[row.$$index + '-city']\\\">\\r\\n              {{value}}\\r\\n            </span>\\r\\n      <select\\r\\n        *ngIf=\\\"editing[row.$$index + '-city']\\\"\\r\\n        (change)=\\\"updateValue($event, 'city', value, row)\\\"\\r\\n        [value]=\\\"value\\\">\\r\\n        <option value=1>1</option>\\r\\n        <option value=2>2</option>\\r\\n        <option value=3>3</option>\\r\\n        <option value=4>4</option>\\r\\n        <option value=5>5</option>\\r\\n      </select>\\r\\n    </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"Phone\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n            <span\\r\\n              title=\\\"Double click to edit\\\"\\r\\n              (click)=\\\"editing[row.$$index + '-phone'] = true\\\"\\r\\n              *ngIf=\\\"!editing[row.$$index + '-phone']\\\">\\r\\n              {{value}}\\r\\n            </span>\\r\\n        <input\\r\\n          autofocus\\r\\n          (blur)=\\\"updateValue($event, 'phone', value, row)\\\"\\r\\n          *ngIf=\\\"editing[row.$$index + '-phone']\\\"\\r\\n          type=\\\"text\\\"\\r\\n          [value]=\\\"value\\\"\\r\\n        />\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"Active\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n             <span\\r\\n               title=\\\"Double click to edit\\\"\\r\\n               (click)=\\\"editing[row.$$index + '-active'] = true\\\"\\r\\n               *ngIf=\\\"!editing[row.$$index + '-active']\\\">\\r\\n              {{value}}\\r\\n            </span>\\r\\n        <select\\r\\n          *ngIf=\\\"editing[row.$$index + '-active']\\\"\\r\\n          (change)=\\\"updateValue($event, 'active', value, row)\\\"\\r\\n          [value]=\\\"value\\\">\\r\\n          <option value=0>0</option>\\r\\n          <option value=1>1</option>\\r\\n        </select>\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"Group\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n             <span\\r\\n               title=\\\"Double click to edit\\\"\\r\\n               (click)=\\\"editing[row.$$index + '-group'] = true\\\"\\r\\n               *ngIf=\\\"!editing[row.$$index + '-group']\\\">\\r\\n              {{value}}\\r\\n            </span>\\r\\n        <select\\r\\n          *ngIf=\\\"editing[row.$$index + '-group']\\\"\\r\\n          (change)=\\\"updateValue($event, 'group', value, row)\\\"\\r\\n          [value]=\\\"value\\\">\\r\\n          <option value=null>null</option>\\r\\n          <option value=0>0</option>\\r\\n          <option value=1>1</option>\\r\\n          <option value=2>2</option>\\r\\n          <option value=3>3</option>\\r\\n          <option value=4>4</option>\\r\\n        </select>\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n        <button md-raised-button (click)=\\\"deleteRow($event, row)\\\">Delete</button>\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n  </ngx-datatable>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/KirK/IdeaProjects/ngx/src/app/employee.component.html\n// module id = ../../../../../src/app/employee.component.html\n// module chunks = 1","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'employee',\r\n  templateUrl: './employee.component.html'\r\n})\r\nexport class EmployeeComponent {\r\n  updated = \"\";\r\n  editing = {};\r\n  rows = [];\r\n\r\n  constructor() {\r\n    this.fetch((data) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `http://localhost:8080/employee`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  updateValue(event, cell, cellValue, row) {\r\n    this.editing[row.$$index + '-' + cell] = false;\r\n    this.rows[row.$$index][cell] = event.target.value;\r\n    this.updated = JSON.stringify(row);\r\n    const rep = new XMLHttpRequest();\r\n    rep.open('POST', `http://localhost:8080/employee/update`);\r\n    rep.send(JSON.stringify(row));\r\n  }\r\n  deleteRow(event, row){\r\n    var id = row.id;\r\n    this.rows.splice(row.$$index, 1);\r\n    this.updated = id;\r\n    const red = new XMLHttpRequest();\r\n    red.open('POST', `http://localhost:8080/employee/delete`);\r\n    red.send(id);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/KirK/IdeaProjects/ngx/src/app/employee.component.ts","module.exports = \"\\r\\n<div>\\r\\n  <!--<h3>\\r\\n    {{updated}}\\r\\n  </h3>-->\\r\\n  <ngx-datatable\\r\\n    #mydatatable\\r\\n    class=\\\"material\\\"\\r\\n    [headerHeight]=\\\"50\\\"\\r\\n    [limit]=\\\"10\\\"\\r\\n    [columnMode]=\\\"'force'\\\"\\r\\n    [footerHeight]=\\\"50\\\"\\r\\n    [rowHeight]=\\\"'auto'\\\"\\r\\n    [rows]=\\\"rows\\\">\\r\\n    <ngx-datatable-column name=\\\"Id\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n        {{value}}\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"Name\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n            <span\\r\\n              title=\\\"Double click to edit\\\"\\r\\n              (click)=\\\"editing[row.$$index + '-name'] = true\\\"\\r\\n              *ngIf=\\\"!editing[row.$$index + '-name']\\\">\\r\\n              {{value}}\\r\\n            </span>\\r\\n        <input\\r\\n          autofocus\\r\\n          (blur)=\\\"updateValue($event, 'name', value, row)\\\"\\r\\n          *ngIf=\\\"editing[row.$$index + '-name']\\\"\\r\\n          type=\\\"text\\\"\\r\\n          [value]=\\\"value\\\"\\r\\n        />\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"Square\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n            <span\\r\\n              title=\\\"Double click to edit\\\"\\r\\n              (click)=\\\"editing[row.$$index + '-square'] = true\\\"\\r\\n              *ngIf=\\\"!editing[row.$$index + '-square']\\\">\\r\\n              {{value}}\\r\\n            </span>\\r\\n        <input\\r\\n          autofocus\\r\\n          (blur)=\\\"updateValue($event, 'square', value, row)\\\"\\r\\n          *ngIf=\\\"editing[row.$$index + '-square']\\\"\\r\\n          type=\\\"text\\\"\\r\\n          [value]=\\\"value\\\"\\r\\n        />\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"Contract\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-row=\\\"row\\\">\\r\\n            <span\\r\\n              title=\\\"Double click to edit\\\"\\r\\n              (click)=\\\"editing[row.$$index + '-contract'] = true\\\"\\r\\n              *ngIf=\\\"!editing[row.$$index + '-contract']\\\">\\r\\n              {{value}}\\r\\n            </span>\\r\\n        <input\\r\\n          autofocus\\r\\n          (blur)=\\\"updateValue($event, 'contract', value, row)\\\"\\r\\n          *ngIf=\\\"editing[row.$$index + '-contract']\\\"\\r\\n          type=\\\"text\\\"\\r\\n          [value]=\\\"value\\\"\\r\\n        />\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n    <ngx-datatable-column name=\\\"\\\">\\r\\n      <ng-template ngx-datatable-cell-template let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n        <button md-raised-button (click)=\\\"deleteRow($event, row)\\\">Delete</button>\\r\\n      </ng-template>\\r\\n    </ngx-datatable-column>\\r\\n  </ngx-datatable>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/KirK/IdeaProjects/ngx/src/app/location.component.html\n// module id = ../../../../../src/app/location.component.html\n// module chunks = 1","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'location',\r\n  templateUrl: './location.component.html'\r\n})\r\nexport class LocationComponent {\r\n  updated = \"\";\r\n  editing = {};\r\n  rows = [];\r\n\r\n  constructor() {\r\n    this.fetch((data) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `http://localhost:8080/location`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  updateValue(event, cell, cellValue, row) {\r\n    this.editing[row.$$index + '-' + cell] = false;\r\n    this.rows[row.$$index][cell] = event.target.value;\r\n    this.updated = JSON.stringify(row);\r\n    const rep = new XMLHttpRequest();\r\n    rep.open('POST', `http://localhost:8080/location/update`);\r\n    rep.send(JSON.stringify(row));\r\n  }\r\n  deleteRow(event, row){\r\n    var id = row.id;\r\n    this.rows.splice(row.$$index, 1);\r\n    this.updated = id;\r\n    const red = new XMLHttpRequest();\r\n    red.open('POST', `http://localhost:8080/location/delete`);\r\n    red.send(id);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/KirK/IdeaProjects/ngx/src/app/location.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/KirK/IdeaProjects/ngx/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/KirK/IdeaProjects/ngx/src/main.ts"],"sourceRoot":"webpack:///"}